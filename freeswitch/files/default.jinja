{%- set settings = salt['pillar.get']('varnish', {}) %}
# NOTE: this file is managed by puppet
#
# Configuration file for varnish
#
# /etc/init.d/varnish expects the variables $DAEMON_OPTS, $NFILES and $MEMLOCK
# to be set from this shell script fragment.
#
# Note: If systemd is installed, this file is obsolete and ignored.  You will
# need to copy /lib/systemd/system/varnish.service to /etc/systemd/system/ and
# edit that file.

# Should we start varnishd at boot?  Set to "no" to disable.
START={{ settings.get('start', 'yes') }}

# Maximum number of open files (for ulimit -n)
NFILES={{ settings.get('nfiles', 131072) }}

# Maximum locked memory size (for ulimit -l)
# Used for locking the shared memory log in memory.  If you increase log size,
# you need to increase this number as well
MEMLOCK={{ settings.get('memlock', 82000) }}

# Default varnish instance name is the local nodename.  Can be overridden with
# the -n switch, to have more instances on a single server.
# INSTANCE=$(uname -n)

# See varnishd(1) for more information.
#
# # Main configuration file. You probably want to change it :)
VARNISH_VCL_CONF={{ settings.get('vcl_conf', '/etc/varnish/default.vcl') }}
#
# # Default address and port to bind to
# # Blank address means all IPv4 and IPv6 interfaces, otherwise specify
# # a host name, an IPv4 dotted quad, or an IPv6 address in brackets.
VARNISH_LISTEN_ADDRESS={{ settings.get('listen_address', '') }}
VARNISH_LISTEN_PORT={{ settings.get('listen_port', 9000) }}
#
# # Telnet admin interface listen address and port
VARNISH_ADMIN_LISTEN_ADDRESS={{ settings.get('admin_listen_address', '127.0.0.1') }}
VARNISH_ADMIN_LISTEN_PORT={{ settings.get('admin_listen_port', 6082) }}
#
# # The minimum number of worker threads to start
VARNISH_MIN_THREADS={{ settings.get('min_threads', 4) }}
#
# # The Maximum number of worker threads to start
VARNISH_MAX_THREADS={{ settings.get('max_threads', 50) }}
#
# # Idle timeout for worker threads
VARNISH_THREAD_TIMEOUT={{ settings.get('thread_timeout', 300) }}
#
# # Cache file location
VARNISH_STORAGE_FILE={{ settings.get('storage_file', '/var/lib/varnish-storage/varnish_storage.bin') }}
#
# # Cache file size: in bytes, optionally using k / M / G / T suffix,
# # or in percentage of available disk space using the % suffix.
VARNISH_STORAGE_SIZE={{ settings.get('storage_size', '3G') }}
#
# # File containing administration secret
VARNISH_SECRET_FILE={{ settings.get('secret_file', '/etc/varnish/secret') }}
# 
# # Backend storage specification
{%- if settings.get('storage_type', 'malloc') == 'malloc' %}
VARNISH_STORAGE="malloc,${VARNISH_STORAGE_SIZE}"
{%- else %}
VARNISH_STORAGE="{{ settings.get('storage_type') }},${VARNISH_STORAGE_FILE},${VARNISH_STORAGE_SIZE}"
{%- endif %}

#
# # Default TTL used when the backend does not specify one
VARNISH_TTL={{ settings.get('ttl', 120) }}
#
# # DAEMON_OPTS is used by the init script.  If you add or remove options, make
# # sure you update this section, too.
DAEMON_OPTS="-a ${VARNISH_LISTEN_ADDRESS}:${VARNISH_LISTEN_PORT} \
             -f ${VARNISH_VCL_CONF} \
             -T ${VARNISH_ADMIN_LISTEN_ADDRESS}:${VARNISH_ADMIN_LISTEN_PORT} \
             -t ${VARNISH_TTL} \
             -S ${VARNISH_SECRET_FILE} \
             -s ${VARNISH_STORAGE} \
             -p thread_pool_min=${VARNISH_MIN_THREADS} \
             -p thread_pool_max=${VARNISH_MAX_THREADS} \
             -p thread_pool_timeout=${VARNISH_THREAD_TIMEOUT}"


